#!/bin/sh

revision="setvariant v0.1.1 (2023-05-16 by MIB-Wiki)"
# use --help for more info

export PATH=:/proc/boot:/sbin:/bin:/usr/bin:/usr/sbin:/net/mmx/bin:/net/mmx/usr/bin:/net/mmx/usr/sbin:/net/mmx/sbin:/net/mmx/mnt/app/armle/bin:/net/mmx/mnt/app/armle/sbin:/net/mmx/mnt/app/armle/usr/bin:/net/mmx/mnt/app/armle/usr/sbin
export LD_LIBRARY_PATH=/net/mmx/mnt/app/root/lib-target:/net/mmx/mnt/eso/lib:/net/mmx/eso/lib:/net/mmx/mnt/app/usr/lib:/net/mmx/mnt/app/armle/lib:/net/mmx/mnt/app/armle/lib/dll:/net/mmx/mnt/app/armle/usr/lib
export IPL_CONFIG_DIR=/etc/eso/production

thisname="$(basename $0)"
thisdir="$(dirname $0)"

if [ -z $LOG ]; then
	. $thisdir/../config/GLOBALS
fi
echo -ne "\n$ME-$thisname---->\n" | $TEE -i -a $LOG

if [ -f $TMP/reboot.mib ]; then
	echo -ne "Aborted because the reboot is running...\n" | $TEE -a $LOG
	return 2> /dev/null
fi

if [ "$2" = "-noboot" ]; then
	noboot=$2
else
	noboot=""
fi

case $1 in
	-var) {
		trap '' 2
		if [ -f /net/mmx/mnt/app/eso/bin/apps/pc ]; then #non legacy mode
			VARIANT2="$(on -f mmx $PC s:678364556:12 2> /dev/null | $SED 's/[^a-zA-Z0-9_-]//g')"
		else
			VARIANT2="$($SED -n 's/Variant = '\''\(.*\)'\''/\1/p' /net/rcc/dev/shmem/version.txt | $SED 's/[^a-zA-Z0-9._-]//g')"
			VARTYPE="$(echo "$VARIANT" | $SED -n 's/.*-\(.*\)-.*-.*-.*-.*/\1/p')"
			VARLTE="$(echo "$VARIANT" | $SED -n 's/.*-.*-\(.*\)-.*-.*-.*/\1/p')"
			#TNDL in Variant_2 is LND in Variant_1, TNL>LN
			VARLTE="$(echo "$VARLTE" | $SED 's/TNDL/LND/')"
			VARLTE="$(echo "$VARLTE" | $SED 's/TNL/LN/')"
			VARNAV=""
			VARDAB=""
			VARSIR=""
			VARREG="45 55 " #EU
		fi
		echo -ne "Variant_2: $VARIANT2\n"
		COMPONENT="$(on -f rcc /net/rcc/usr/apps/modifyE2P r BA D | $SED -rn 's/^0x\S+\W+(.*?)$/\1/p' | $SED -rn 's:\W*(\S\S)\W*:0x\1\n:pg' | $SED -rn '/^0x/p' | $XXD -r -p | $SED 's/[^a-zA-Z0-9_-]//g' )"
		echo -ne "Ð¡urrent Variant_1: $COMPONENT\n" | $TEE -i -a $LOG

		VARERROR=0
		if [ -f /net/mmx/mnt/app/eso/bin/apps/pc ]; then #non legacy mode
			echo -ne "Reading persistence...\n" | $TEE -i -a $LOG
			#Type
			VARTYPE="$(on -f mmx $PC i:0x286f058c:4)"
			#Telephone 0/1
			#VARTEL="$(on -f mmx $PC i:0x286f058c:5)"
			#Navigation EU
			VARNAV="$(on -f mmx $PC i:0x286f058c:6)"
			#DAB 0/1
			VARDAB="$(on -f mmx $PC i:0x286f058c:7)"
			#sirius 0/1
			VARSIR="$(on -f mmx $PC i:0x286f058c:8)"
			# LTE 0/1
			VARLTE="$(on -f mmx $PC i:0x286f058c:17)"
			# region EU
			VARREG="$(on -f mmx $PC i:0x286f058c:9)"
			#error handler for variant_1

			if [ $VARTYPE = 1 ]; then #High
				VARTYPE="48 "
			elif [ $VARTYPE = 4 ]; then #Premium
				VARTYPE="50 "
			else
				echo -ne "Type unknown\n" | $TEE -i -a $LOG
				VARTYPE=""
				VARERROR=1
			fi

			#if [ $VARTEL = 1 ]; then #ENABLED
			#	VARTEL="54 "
			#elif [ $VARTEL = 0 ]; then #OFF
			#	VARTEL=""
			#else
			#	echo -ne "Telephone status unknown\n" | $TEE -i -a $LOG
			#	VARTEL=""
			#	VARERROR=1
			#fi

			if [ $VARNAV = 1 ]; then #ENABLED
				VARNAV="4e "
			elif [ $VARNAV = 0 ]; then #OFF
				VARNAV=""
			else
				echo -ne "Navigation status unknown\n" | $TEE -i -a $LOG
				VARNAV=""
				VARERROR=1
			fi

			if [ $VARDAB = 1 ]; then #ENABLED
				VARDAB="44 "
			elif [ $VARDAB = 0 ]; then #OFF
				VARDAB=""
			else
				echo -ne "DAB status unknown\n" | $TEE -i -a $LOG
				VARDAB=""
				VARERROR=1
			fi

			if [ $VARSIR = 1 ]; then #ENABLED
				VARSIR="53 "
			elif [ $VARSIR = 0 ]; then #OFF
				VARSIR=""
			else
				echo -ne "Sirius status unknown\n" | $TEE -i -a $LOG
				VARSIR=""
				VARERROR=1
			fi

			if [ $VARLTE = 1 ]; then #ENABLED
				VARLTE="4c "
			elif [ $VARLTE = 0 ]; then #OFF
				VARLTE=""
			else
				echo -ne "LTE status unknown\n" | $TEE -i -a $LOG
				VARLTE=""
				VARERROR=1
			fi

			case $VARREG in
				1) VARREG="45 52 " ;; #ER
				2) VARREG="45 55 " ;; #EU
				3) VARREG="55 53 " ;; #US
				4) VARREG="52 57 " ;; #RW
				5) VARREG="43 4e " ;; #CN
				6) VARREG="4a 50 " ;; #JP
				7) VARREG="4B 52 " ;; #KR
				8) VARREG=""		  #Asia?
					echo -ne "Region code 8 unknown\n" | $TEE -i -a $LOG
					VARERROR=1 ;;
				9) VARREG="54 57 " ;; #TW
				*) VARREG=""
					echo -ne "Region unknown\n" | $TEE -i -a $LOG
					VARERROR=1 ;;
			esac
		fi

		if [ $VARERROR = 0 ]; then
			echo -ne "Cleaning Variant_1 in EEPROM(writing 13 zero bytes)\n" | $TEE -i -a $LOG
			on -f rcc /usr/apps/modifyE2P w BA 00 00 00 00 00 00 00 00 00 00 00 00 00 >> $LOG
			#Build Variant_1 string 
			EVAR="4d 55 2d "$VARTYPE"2d "$VARLTE$VARNAV$VARDAB$VARSIR"2d "$VARREG
			#EVAR=$(echo "$EVAR" | $SED -r 's/[[:space:]]//g')
			#AVAR=$(on -f mmx $VOLUME/apps/hex2ascii -convert $EVAR)
			AVAR=$(echo "$EVAR" | $XXD -r -p)
			echo -ne "Variant_1 generated from Variant_2: "$AVAR"\n" | $TEE -i -a $LOG
			echo -ne "Writing generated Variant_1 into EEPROM\n" | $TEE -i -a $LOG
			on -f rcc /usr/apps/modifyE2P w BA $EVAR >> $LOG
			COMPONENT="$(on -f rcc /net/rcc/usr/apps/modifyE2P r BA D | $SED -rn 's/^0x\S+\W+(.*?)$/\1/p' | $SED -rn 's:\W*(\S\S)\W*:0x\1\n:pg' | $SED -rn '/^0x/p' | $XXD -r -p | $SED 's/[^a-zA-Z0-9_-]//g' )"
			echo -ne "Variant_1 in EEPROM: $COMPONENT\n" | $TEE -i -a $LOG
		else
			echo -ne "Aborted. Cannot generate Variant_1!\n" | $TEE -i -a $LOG
			exit 1
		fi
		echo -ne "\n$thisname done!\n" | $TEE -i -a $LOG
	};;

	# help or unknown parameter ------------------------------
	*) {
		echo ""
		echo $revision
		echo ""
		echo "Usage: "$thisname" [OPTION] [-noboot]"
		echo ""
		echo "Options:"
		echo "        -var          set variant_1"
		echo "        --help        show this help"
		echo ""
		echo "Note: Backup will only work in RCC bash!"
		echo ""
		echo "This program is free software; you can redistribute it and/or"
		echo "modify it under the terms of the GNU General Public License"
		echo "as published by the Free Software Foundation; either version 2"
		echo "of the License, or (at your option) any later version."
		echo ""
		echo "This program is distributed in the hope that it will be useful,"
		echo "but WITHOUT ANY WARRANTY; without even the implied warranty of"
		echo "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
		echo "See the GNU General Public License for more details."
		echo ""
		echo "You should have received a copy of the GNU General Public License"
		echo "along with this program; if not, write to the Free Software Foundation,"
		echo "Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA."
		echo ""
	};;
esac

trap 2
[ -z "$noboot" ] && . $thisdir/reboot -t 10
exit 0